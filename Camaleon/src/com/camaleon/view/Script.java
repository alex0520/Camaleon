/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.camaleon.view;

import com.camaleon.entities.Attribute;
import com.camaleon.entities.AttributeDataType;
import com.camaleon.entities.Table;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author ASUS
 */
public class Script extends javax.swing.JFrame {

    App padre = null;
    Map<String,Table> tables = null;
    List<String> keyList = null;
    final String namePattern = "[A-Za-z0-9_]+";

    DefaultComboBoxModel<Attribute> dCBMAtributos = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<String> dCBMTables = new DefaultComboBoxModel<>();

    /**
     * Creates new form Script
     */
    public Script(javax.swing.JFrame parent, Map<String,Table> tables) {
        this.tables = tables;
        this.padre = (App) parent;
        initComponents();
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        
        selTable.setModel(dCBMTables);
        if (!tables.isEmpty()) {
            populateTables();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        selTable = new javax.swing.JComboBox<>();
        lblTableSelect = new javax.swing.JLabel();
        lblStep1 = new javax.swing.JLabel();
        lblNombreTabla = new javax.swing.JLabel();
        txtTableName = new javax.swing.JTextField();
        btnGuardarNombreTabla = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnGenerarScript = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Generar script");

        selTable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        selTable.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selTableItemStateChanged(evt);
            }
        });

        lblTableSelect.setText("Tabla:");

        lblStep1.setText("Seleccione una tabla y cambie su nombre, para generar el script");

        lblNombreTabla.setText("Nombre Tabla:");

        btnGuardarNombreTabla.setText("Guardar Nombre Tabla");
        btnGuardarNombreTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarNombreTablaActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnGenerarScript.setText("Generar script");
        btnGenerarScript.setEnabled(false);
        btnGenerarScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarScriptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNombreTabla)
                                    .addComponent(lblTableSelect))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(selTable, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtTableName)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblStep1)
                                .addGap(0, 166, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnGuardarNombreTabla))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnGenerarScript)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblStep1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTableSelect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreTabla)
                    .addComponent(txtTableName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGuardarNombreTabla)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnGenerarScript))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selTableItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selTableItemStateChanged
        int selectedTableIndex = selTable.getSelectedIndex();
        if (selectedTableIndex > -1) {
            Table table = tables.get(keyList.get(selectedTableIndex));
            txtTableName.setText(table.getTableName());
        }
    }//GEN-LAST:event_selTableItemStateChanged

    private void btnGuardarNombreTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarNombreTablaActionPerformed
        String tableName = txtTableName.getText();
        if(tableName.matches(namePattern)){
            int selectedTableIndex = selTable.getSelectedIndex();
            if (selectedTableIndex > -1) {
                Table table = tables.get(keyList.get(selectedTableIndex));
                table.setTableName(txtTableName.getText());
                populateTables();
                selTable.setSelectedIndex(selectedTableIndex);
                JOptionPane.showMessageDialog(JOptionPane.getFrameForComponent((Component) evt.getSource()), "Se cambió el nombre de la tabla correctamente", "Correcto", JOptionPane.INFORMATION_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(JOptionPane.getFrameForComponent((Component) evt.getSource()), "El nombre de la tabla no es válido, el nombre solo puede contener letras, números y _", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarNombreTablaActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnGenerarScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarScriptActionPerformed
        String script =  getScript();
        JFileChooser chooser = new JFileChooser();
        chooser.addChoosableFileFilter(new FileNameExtensionFilter("Archivos SQL (.sql)", "sql"));
        chooser.setFileFilter(chooser.getChoosableFileFilters()[0]);
        chooser.setAcceptAllFileFilterUsed(false);
        chooser.setSelectedFile(new File("Script"));
        int retrival = chooser.showSaveDialog(null);
        if (retrival == JFileChooser.APPROVE_OPTION) {
            try(FileWriter fw = new FileWriter(chooser.getSelectedFile().getCanonicalPath() + "." + ((FileNameExtensionFilter) chooser.getFileFilter()).getExtensions()[0])) {
                fw.write(script);
                JOptionPane.showMessageDialog(JOptionPane.getFrameForComponent((Component) evt.getSource()), "Se generó el script correctamente", "Correcto", JOptionPane.INFORMATION_MESSAGE);
            }catch(Exception e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(JOptionPane.getFrameForComponent((Component) evt.getSource()), "Se produjo un error al guardar el Script, intente nuevamente", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnGenerarScriptActionPerformed

    private String getScript() {
        StringBuilder sb =  new StringBuilder();
        StringBuilder sbAttributes;
        Map<String, Table> localTables;
        for(Map.Entry<String,Table> entry : tables.entrySet()){
            Table table = entry.getValue();
            localTables = new HashMap<>(tables);
            localTables.remove(entry.getKey());            
            sb.append("CREATE TABLE ");
            sb.append(table.getTableName());
            sb.append(" (");
            sbAttributes = new StringBuilder();
            Set<String> primaryKeySet = localTables.keySet();
            List<String> foreignKeys = new LinkedList<>();
            for(String primarykey : primaryKeySet){
                Set<String> primarykeyItems = new HashSet<>(Arrays.asList(primarykey.split(", ")));
                    if(table.getAttributeKeys().containsAll(primarykeyItems)){
                        foreignKeys.add(primarykey);
                    }
            }
            
            for(Map.Entry<String, Attribute> entryAttribute : table.getAttributes().entrySet()){
                Attribute attribute = entryAttribute.getValue();
                if(sbAttributes.length()>0){
                    sbAttributes.append(",");
                }
                sbAttributes.append("\n\r");
                sbAttributes.append("\t");
                sbAttributes.append(attribute.getName());
                sbAttributes.append(" ");
                AttributeDataType type = attribute.getType();
                sbAttributes.append(type.getName());
                if(type.requiresLength()){
                    sbAttributes.append("(");
                    sbAttributes.append(attribute.getLength());
                    if(type.requiresScale()){
                        sbAttributes.append(",");
                        sbAttributes.append(attribute.getScale());
                    }
                    sbAttributes.append(")");
                }
            }
            sb.append(sbAttributes);
            sb.append(",\n\r\t");
            sb.append("CONSTRAINT");
            sb.append(" ");
            sb.append("pk_").append(table.getTableName());
            sb.append(" ");
            sb.append("PRIMARY KEY");
            sb.append(" ");
            sb.append("(");
            StringBuilder sbPrimaryKey = new StringBuilder();
            String primaryKey = entry.getKey();
            String[] primaryKeyItems = primaryKey.split(",");
            for(String primaryKeyItem : primaryKeyItems){
                if(sbPrimaryKey.length()>0){
                    sbPrimaryKey.append(",");
                }
                sbPrimaryKey.append(table.getAttributes().get(primaryKeyItem).getName());
            }
            sb.append(sbPrimaryKey);
            sb.append(")");
            StringBuilder sbForeignKeys = new StringBuilder();
            if(foreignKeys.size()>0){
                for(String foreignKey : foreignKeys){
                    sbForeignKeys.append("\n\r\t,");
                    sbForeignKeys.append("FOREIGN KEY (");
                    String attributeName = table.getAttributes().get(foreignKey).getName();
                    sbForeignKeys.append(attributeName);
                    sbForeignKeys.append(") ");
                    sbForeignKeys.append("REFERENCES ");
                    sbForeignKeys.append(tables.get(foreignKey).getTableName());
                    sbForeignKeys.append("(");
                    sbForeignKeys.append(attributeName);
                    sbForeignKeys.append(")");
                }
            }
            sb.append(sbForeignKeys);
            sb.append("\n\r);");
            sb.append("\n\r");
        }
        return sb.toString();
    }
   
    private void populateTables() {
        dCBMTables.removeAllElements();
        keyList = new ArrayList(tables.keySet());
        this.tables.entrySet().stream().map(entry -> entry.getValue().getTableName()).forEach(t -> dCBMTables.addElement(t));
        long tableInvalidNames = this.tables.values().stream().filter(table -> !table.getTableName().matches(namePattern)).count();
        if(tableInvalidNames==0){
            btnGenerarScript.setEnabled(true);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Script.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Script.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Script.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Script.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Script(null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGenerarScript;
    private javax.swing.JButton btnGuardarNombreTabla;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblNombreTabla;
    private javax.swing.JLabel lblStep1;
    private javax.swing.JLabel lblTableSelect;
    private javax.swing.JComboBox<String> selTable;
    private javax.swing.JTextField txtTableName;
    // End of variables declaration//GEN-END:variables
}
