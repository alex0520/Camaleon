/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.camaleon.view;

import com.camaleon.entities.FuncDependency;
import com.camaleon.entities.TreeSetListModel;
import com.google.common.collect.Sets;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import javax.swing.JOptionPane;

/**
 *
 * @author Alexander Lozano
 */
public class FuncDependencyForm extends javax.swing.JFrame {
    
    App padre = null;
    TreeSetListModel<String> tslmAttrNotImplicant = new TreeSetListModel<String>(String.CASE_INSENSITIVE_ORDER);
    TreeSetListModel<String> tslmAttrImplicant = new TreeSetListModel<String>(String.CASE_INSENSITIVE_ORDER);
    TreeSetListModel<String> tslmAttrNotImplied = new TreeSetListModel<String>(String.CASE_INSENSITIVE_ORDER);
    TreeSetListModel<String> tslmAttrImplied = new TreeSetListModel<String>(String.CASE_INSENSITIVE_ORDER);
    FuncDependency funcDep = null;

    /**
     * Creates new form FuncDependencyForm
     */
    public FuncDependencyForm(javax.swing.JFrame parent, FuncDependency funcDep, Set<String> attributes) {
        
        this.funcDep = funcDep;
        padre = (App) parent;
        
        initComponents();
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        
        jlAttrImplicant.setModel(tslmAttrNotImplicant);
        jlAttrImplicantSel.setModel(tslmAttrImplicant);
        
        jlAttrImplied.setModel(tslmAttrNotImplied);
        jlAttrImpliedSel.setModel(tslmAttrImplied);
        
        Set<String> implicant = funcDep.getImplicantKeys();
        Set<String> implied = funcDep.getImpliedKeys();
        
        HashSet<String> notImplicant = new HashSet<String>(Sets.difference(attributes, implicant));
        HashSet<String> notImplied = new HashSet<String>(Sets.difference(attributes, implied));
        
        for (Iterator<String> iterator = notImplicant.iterator(); iterator.hasNext();) {
            tslmAttrNotImplicant.add(iterator.next());
        }
        
        for (Iterator<String> iterator = implicant.iterator(); iterator.hasNext();) {
            tslmAttrImplicant.add(iterator.next());
        }
        
        for (Iterator<String> iterator = notImplied.iterator(); iterator.hasNext();) {
            tslmAttrNotImplied.add(iterator.next());
        }
        
        for (Iterator<String> iterator = implied.iterator(); iterator.hasNext();) {
            tslmAttrImplied.add(iterator.next());
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jlAttrImplicant = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlAttrImpliedSel = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jlAttrImplicantSel = new javax.swing.JList<>();
        lblImplicante = new javax.swing.JLabel();
        lblImplicado = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jlAttrImplied = new javax.swing.JList<>();
        btnRightImplicant = new javax.swing.JButton();
        btnLeftImplicant = new javax.swing.JButton();
        btnRightImplied = new javax.swing.JButton();
        btnLeftImplied = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Dependencia Funcional");

        jlAttrImplicant.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlAttrImplicantValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jlAttrImplicant);

        jlAttrImpliedSel.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlAttrImpliedSelValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jlAttrImpliedSel);

        jlAttrImplicantSel.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlAttrImplicantSelValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(jlAttrImplicantSel);

        lblImplicante.setText("Implicante");

        lblImplicado.setText("Implicado");

        jlAttrImplied.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlAttrImpliedValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(jlAttrImplied);

        btnRightImplicant.setText("->");
        btnRightImplicant.setEnabled(false);
        btnRightImplicant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRightImplicantActionPerformed(evt);
            }
        });

        btnLeftImplicant.setText("<-");
        btnLeftImplicant.setEnabled(false);
        btnLeftImplicant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeftImplicantActionPerformed(evt);
            }
        });

        btnRightImplied.setText("->");
        btnRightImplied.setEnabled(false);
        btnRightImplied.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRightImpliedActionPerformed(evt);
            }
        });

        btnLeftImplied.setText("<-");
        btnLeftImplied.setEnabled(false);
        btnLeftImplied.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeftImpliedActionPerformed(evt);
            }
        });

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancelar");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(282, 282, 282)
                .addComponent(lblImplicante)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(272, 272, 272)
                        .addComponent(lblImplicado)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAceptar)
                        .addGap(36, 36, 36)
                        .addComponent(btnCancel)
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane4)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnLeftImplicant, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnRightImplied)
                                .addComponent(btnLeftImplied))
                            .addComponent(btnRightImplicant, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImplicante)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnRightImplicant)
                        .addGap(29, 29, 29)
                        .addComponent(btnLeftImplicant)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblImplicado)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(btnRightImplied)
                        .addGap(23, 23, 23)
                        .addComponent(btnLeftImplied)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptar)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void jlAttrImplicantValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlAttrImplicantValueChanged
        if (jlAttrImplicant.getSelectedIndex() > -1) {
            btnRightImplicant.setEnabled(true);
        } else {
            btnRightImplicant.setEnabled(false);
        }
    }//GEN-LAST:event_jlAttrImplicantValueChanged

    private void jlAttrImplicantSelValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlAttrImplicantSelValueChanged
        if (jlAttrImplicantSel.getSelectedIndex() > -1) {
            btnLeftImplicant.setEnabled(true);
        } else {
            btnLeftImplicant.setEnabled(false);
        }
    }//GEN-LAST:event_jlAttrImplicantSelValueChanged

    private void jlAttrImpliedValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlAttrImpliedValueChanged
        if (jlAttrImplied.getSelectedIndex() > -1) {
            btnRightImplied.setEnabled(true);
        } else {
            btnRightImplied.setEnabled(false);
        }
    }//GEN-LAST:event_jlAttrImpliedValueChanged

    private void jlAttrImpliedSelValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlAttrImpliedSelValueChanged
        if (jlAttrImpliedSel.getSelectedIndex() > -1) {
            btnLeftImplied.setEnabled(true);
        } else {
            btnLeftImplied.setEnabled(false);
        }
    }//GEN-LAST:event_jlAttrImpliedSelValueChanged

    private void btnRightImplicantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRightImplicantActionPerformed
        if (jlAttrImplicant.getSelectedIndices().length > 0) {
            List<String> selectedValuesList = jlAttrImplicant.getSelectedValuesList();
            for (int i = 0; i < selectedValuesList.size(); i++) {
                String attr = selectedValuesList.get(i);
                tslmAttrNotImplicant.remove(attr);
                tslmAttrImplicant.add(attr);
            }
        }
    }//GEN-LAST:event_btnRightImplicantActionPerformed

    private void btnLeftImplicantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeftImplicantActionPerformed
        if (jlAttrImplicantSel.getSelectedIndices().length > 0) {
            List<String> selectedValuesList = jlAttrImplicantSel.getSelectedValuesList();
            for (int i = 0; i < selectedValuesList.size(); i++) {
                String attr = selectedValuesList.get(i);
                tslmAttrImplicant.remove(attr);
                tslmAttrNotImplicant.add(attr);
            }
        }
    }//GEN-LAST:event_btnLeftImplicantActionPerformed

    private void btnRightImpliedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRightImpliedActionPerformed
        if (jlAttrImplied.getSelectedIndices().length > 0) {
            List<String> selectedValuesList = jlAttrImplied.getSelectedValuesList();
            for (int i = 0; i < selectedValuesList.size(); i++) {
                String attr = selectedValuesList.get(i);
                tslmAttrNotImplied.remove(attr);
                tslmAttrImplied.add(attr);
            }
        }
    }//GEN-LAST:event_btnRightImpliedActionPerformed

    private void btnLeftImpliedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeftImpliedActionPerformed
        if (jlAttrImpliedSel.getSelectedIndices().length > 0) {
            List<String> selectedValuesList = jlAttrImpliedSel.getSelectedValuesList();
            for (int i = 0; i < selectedValuesList.size(); i++) {
                String attr = selectedValuesList.get(i);
                tslmAttrImplied.remove(attr);
                tslmAttrNotImplied.add(attr);
            }
        }
    }//GEN-LAST:event_btnLeftImpliedActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        if (tslmAttrImplicant.getSize() > 0 && tslmAttrImplied.getSize() > 0) {
            FuncDependency funcDependency = new FuncDependency();
            /*funcDependency.setImplicant(tslmAttrImplicant.getAllElements());
            funcDependency.setImplied(tslmAttrImplied.getAllElements());*/
            this.dispose();
            if (funcDep.getImplicant().isEmpty()) {
                padre.addFuncDependency(funcDependency);
            } else {
                padre.editFuncDependency(funcDep, funcDependency);
            }
            
        } else {
            JOptionPane.showMessageDialog(JOptionPane.getFrameForComponent((Component) evt.getSource()), "Ud debe seleccionar al menos un atributo para el implicante y uno para el implicado", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FuncDependencyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FuncDependencyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FuncDependencyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FuncDependencyForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FuncDependencyForm(null, null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnLeftImplicant;
    private javax.swing.JButton btnLeftImplied;
    private javax.swing.JButton btnRightImplicant;
    private javax.swing.JButton btnRightImplied;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> jlAttrImplicant;
    private javax.swing.JList<String> jlAttrImplicantSel;
    private javax.swing.JList<String> jlAttrImplied;
    private javax.swing.JList<String> jlAttrImpliedSel;
    private javax.swing.JLabel lblImplicado;
    private javax.swing.JLabel lblImplicante;
    // End of variables declaration//GEN-END:variables
}
